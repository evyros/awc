{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nlet ButtonComponent = /*#__PURE__*/(() => {\n  class ButtonComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  ButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n    return new (t || ButtonComponent)();\n  };\n\n  ButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ButtonComponent,\n    selectors: [[\"lib-button\"]],\n    decls: 2,\n    vars: 0,\n    template: function ButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"button works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return ButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ButtonModule = /*#__PURE__*/(() => {\n  class ButtonModule {}\n\n  ButtonModule.ɵfac = function ButtonModule_Factory(t) {\n    return new (t || ButtonModule)();\n  };\n\n  ButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ButtonModule\n  });\n  ButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ButtonComponent, ButtonModule }; //# sourceMappingURL=mylib-button.js.map","map":null,"metadata":{},"sourceType":"module"}